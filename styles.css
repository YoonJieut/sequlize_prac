* {
  color: #fff;
}
/* 컨테이너 및 아이템 기본 스타일링 */
#glitch-container {
  position: relative;
  overflow: hidden;
  width: 100vw;
  height: 100vh;
  background: #000; /* 배경색은 검은색으로 설정합니다. */
  display: flex;
  justify-content: center;
  align-items: center;
}

.glitch-item {
  position: relative;
  width: auto; /* 이미지의 원래 크기를 유지합니다. */
  height: auto;
  /* glitch 효과를 위한 CSS 애니메이션 적용 */
  animation: glitch-animation 2s infinite linear;
}

/* glitch 효과를 위한 키프레임 정의 */
@keyframes glitch-animation {
  0%,
  100% {
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
  10%,
  30%,
  50%,
  70% {
    transform: translate3d(calc(-1 * var(--glitch-amplitude)), 0, 0);
    opacity: 0.8;
  }
  20%,
  40%,
  60%,
  80% {
    transform: translate3d(var(--glitch-amplitude), 0, 0);
    opacity: 0.9;
  }
  90% {
    transform: translate3d(calc(-1 * var(--glitch-amplitude) / 2), 0, 0);
    opacity: 0.85;
  }
}

/* 화면 깨짐 효과를 더욱 실감나게 하기 위해 더 많은 요소를 추가합니다. */
.glitch-item::before,
.glitch-item::after {
  content: attr(data-text); /* 이미지 대신 텍스트를 사용할 경우 */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: inherit;
  /* 각각의 요소에 대해 약간 다른 애니메이션을 적용하여 더 실감나는 효과를 줍니다. */
}

.glitch-item::before {
  animation: glitch-animation-before 3s infinite linear;
  clip-path: polygon(0 0, 100% 0, 100% 33%, 0 33%);
  opacity: 0.8;
}

.glitch-item::after {
  animation: glitch-animation-after 2.5s infinite linear;
  clip-path: polygon(0 67%, 100% 67%, 100% 100%, 0 100%);
  opacity: 0.9;
}

@keyframes glitch-animation-before {
  0%,
  100% {
    transform: translate3d(calc(2 * var(--glitch-amplitude)), 0, 0);
  }
  10%,
  30%,
  50%,
  70% {
    transform: translate3d(calc(-1 * var(--glitch-amplitude) * 2), 0, 0);
    opacity: 0.7;
  }
  20%,
  40%,
  60%,
  80% {
    transform: translate3d(calc(var(--glitch-amplitude) * 2), 0, 0);
    opacity: 0.8;
  }
  90% {
    transform: translate3d(calc(-1 * var(--glitch-amplitude)), 0, 0);
    opacity: 0.75;
  }
}

@keyframes glitch-animation-after {
  0%,
  100% {
    transform: translate3d(calc(-2 * var(--glitch-amplitude)), 0, 0);
  }
  10%,
  30%,
  50%,
  70% {
    transform: translate3d(calc(1 * var(--glitch-amplitude) * 3), 0, 0);
    opacity: 0.6;
  }
  20%,
  40%,
  60%,
  80% {
    transform: translate3d(calc(-1 * var(--glitch-amplitude) * 3), 0, 0);
    opacity: 0.7;
  }
  90% {
    transform: translate3d(calc(1 * var(--glitch-amplitude) * 1.5), 0, 0);
    opacity: 0.65;
  }
}

/* glitch 효과의 진폭을 설정합니다. */
:root {
  --glitch-amplitude: 20px; /* 진폭을 조정하여 효과의 강도를 변경할 수 있습니다. */
}
